<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://cdn.tailwindcss.com"></script>

    <script
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCFRCi9RiQ6jNMjspjXa6wVSVH7rbBnIGc&callback=initMap&v=weekly"
            defer
    ></script>
    <script>
      //let poly;
      let map;
      let floorplanOverlay;
      let polylines = [];
      let currentPolyline;
      const toleranceRadius = 3;

      async function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
          zoom: 19,
          center: { lat: 53.38169097419639, lng: -1.4820265913660122 },
        });
        const imageBounds = {
          north: 53.3818981375074,
          south: 53.38133970460098,
          east: -1.48135180383467,
          west: -1.4828341389139235,
        };

        floorplanOverlay = new google.maps.GroundOverlay(
                "https://www.sheffield.ac.uk/sites/default/files/styles/two_thirds_2x/public/2020-01/Diamond%20Fourth%20Floor.jpg?h=ce4ee067&itok=7296wBMS",
                imageBounds,
        );
        floorplanOverlay.setMap(map);

        //adding polylines
        // poly = new google.maps.Polyline({
        //   strokeColor: "#FF0000",
        //   strokeOpacity: 1.0,
        //   strokeWeight: 3,
        //   editable: true,
        //   draggable: true,
        // });
        // poly.setMap(map);
        // // Add a listener for the click event
        // floorplanOverlay.addListener("click", addLatLng);
        floorplanOverlay.addListener("click", (event) => {
          if (!currentPolyline) {
            startNewPolyline();
          }
          addLatLng(event);
        });
        
      }
      function startNewPolyline() {
        currentPolyline = new google.maps.Polyline({
          strokeColor: "#FF0000",
          strokeOpacity: 1.0,
          strokeWeight: 3,
          editable: true,
          draggable: true,
        });
        currentPolyline.setMap(map);
        polylines.push(currentPolyline);

        const path = currentPolyline.getPath();
        google.maps.event.addListener(path, 'set_at', () => handleVertexDrag(path));
        google.maps.event.addListener(path, 'insert_at', () => handleVertexDrag(path));
        google.maps.event.addListener(path, 'rightclick', (event) => handleVertexRightClick(event, path));
      }
      function handleVertexDrag(path) {
        for (let i = 0; i < path.getLength(); i++) {
          const point = path.getAt(i);
          const snappedPoint = findNearbyPoint(point);
          if (snappedPoint && !point.equals(snappedPoint)) {
            path.setAt(i, snappedPoint);
          }
        }
      }
      function handleVertexRightClick(event, path) {
        if (event.vertex !== undefined) {
          path.removeAt(event.vertex);
        }
      }

      function addLatLng(event) {
        const path = currentPolyline.getPath();
        const newPoint = event.latLng;

        // Check for nearby points to snap to
        const snappedPoint = findNearbyPoint(newPoint);
        if (snappedPoint) {
          path.push(snappedPoint);
        } else {
          path.push(newPoint);
        }
      }
      function findNearbyPoint(newPoint) {
        for (const polyline of polylines) {
          const path = polyline.getPath();
          for (let i = 0; i < path.getLength(); i++) {
            const point = path.getAt(i);
            console.log(google.maps.geometry.spherical.computeDistanceBetween(point, newPoint));
            if (google.maps.geometry.spherical.computeDistanceBetween(point, newPoint) <= toleranceRadius) {
              return point;
            }
          }
        }
        return null;
      }

      function completeCurrentPolyline() {
        currentPolyline = null;
      }


      window.initMap = initMap;
    </script>
    <style>
      #map {
        height: 100%;
      }
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
  <div id="map"></div>
  <script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
    ({key: "AIzaSyCFRCi9RiQ6jNMjspjXa6wVSVH7rbBnIGc", v: "weekly"});</script>
  </body>
</html>
